/*
** Lua binding: interface
** Generated automatically by tolua++-1.0.92 on Thu May  2 15:48:56 2013.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_interface_open (lua_State* tolua_S);

#include "interface_c.h"

/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
}

/* function: write_begin */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_begin00
static int tolua_interface_packet_write_begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  short cmd = ((short)  tolua_tonumber(tolua_S,1,0));
  {
   write_begin(cmd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_end */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_end00
static int tolua_interface_packet_write_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   write_end();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_byte */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_byte00
static int tolua_interface_packet_write_byte00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned char value = ((unsigned char)  tolua_tonumber(tolua_S,1,0));
  {
   write_byte(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_byte'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_int */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_int00
static int tolua_interface_packet_write_int00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int value = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   write_int(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_int'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_short */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_short00
static int tolua_interface_packet_write_short00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  short value = ((short)  tolua_tonumber(tolua_S,1,0));
  {
   write_short(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_short'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_uint */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_uint00
static int tolua_interface_packet_write_uint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long value = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  {
   write_uint(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_uint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_string */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_string00
static int tolua_interface_packet_write_string00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* value = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   write_string(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_string'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: write_binary */
#ifndef TOLUA_DISABLE_tolua_interface_packet_write_binary00
static int tolua_interface_packet_write_binary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* buf = ((char*)  tolua_tostring(tolua_S,1,0));
  int len = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   write_binary(buf,len);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write_binary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: send_raw_packet */
#ifndef TOLUA_DISABLE_tolua_interface_packet_send_raw_packet00
static int tolua_interface_packet_send_raw_packet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  send_raw_packet(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_raw_packet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: send_packet */
#ifndef TOLUA_DISABLE_tolua_interface_packet_send_packet00
static int tolua_interface_packet_send_packet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  send_packet(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_packet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: send_buffer */
#ifndef TOLUA_DISABLE_tolua_interface_packet_send_buffer00
static int tolua_interface_packet_send_buffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  char* buffer = ((char*)  tolua_tostring(tolua_S,2,0));
  int len = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  send_buffer(fd,buffer,len);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send_buffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: transfer */
#ifndef TOLUA_DISABLE_tolua_interface_packet_transfer00
static int tolua_interface_packet_transfer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  transfer(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transfer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: transfer_raw */
#ifndef TOLUA_DISABLE_tolua_interface_packet_transfer_raw00
static int tolua_interface_packet_transfer_raw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  transfer_raw(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transfer_raw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: error */
#ifndef TOLUA_DISABLE_tolua_interface_log_error00
static int tolua_interface_log_error00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* msg = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   error(msg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'error'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: info */
#ifndef TOLUA_DISABLE_tolua_interface_log_info00
static int tolua_interface_log_info00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* msg = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   info(msg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'info'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: debug */
#ifndef TOLUA_DISABLE_tolua_interface_log_debug00
static int tolua_interface_log_debug00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* msg = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   debug(msg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'debug'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: create_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_create_timer00
static int tolua_interface_timer_create_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  create_timer();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: start_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_start_timer00
static int tolua_interface_timer_start_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long timer_id = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  int time = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  start_timer(timer_id,time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: reset_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_reset_timer00
static int tolua_interface_timer_reset_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long timer_id = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  reset_timer(timer_id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: stop_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_stop_timer00
static int tolua_interface_timer_stop_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long timer_id = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  stop_timer(timer_id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: clear_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_clear_timer00
static int tolua_interface_timer_clear_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long timer_id = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  clear_timer(timer_id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: remain_timer */
#ifndef TOLUA_DISABLE_tolua_interface_timer_remain_timer00
static int tolua_interface_timer_remain_timer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long timer_id = ((unsigned long)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  remain_timer(timer_id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remain_timer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: create_listener */
#ifndef TOLUA_DISABLE_tolua_interface_server_create_listener00
static int tolua_interface_server_create_listener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int port = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  create_listener(port);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create_listener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: close_socket */
#ifndef TOLUA_DISABLE_tolua_interface_server_close_socket00
static int tolua_interface_server_close_socket00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  close_socket(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'close_socket'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: connect_server */
#ifndef TOLUA_DISABLE_tolua_interface_client_connect_server00
static int tolua_interface_client_connect_server00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* ip = ((char*)  tolua_tostring(tolua_S,1,0));
  int port = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  connect_server(ip,port);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connect_server'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: connect_server */
#ifndef TOLUA_DISABLE_tolua_interface_client_connect_server01
static int tolua_interface_client_connect_server01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  char* ip = ((char*)  tolua_tostring(tolua_S,1,0));
  int port = ((int)  tolua_tonumber(tolua_S,2,0));
  bool is_encrypt = ((bool)  tolua_toboolean(tolua_S,3,0));
  int conn_flag = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   int tolua_ret = (int)  connect_server(ip,port,is_encrypt,conn_flag);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_interface_client_connect_server00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: close_socket */
#ifndef TOLUA_DISABLE_tolua_interface_client_close_socket00
static int tolua_interface_client_close_socket00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int fd = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  close_socket(fd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'close_socket'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: connect_mysql */
#ifndef TOLUA_DISABLE_tolua_interface_mysql_connect_mysql00
static int tolua_interface_mysql_connect_mysql00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* host = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* user = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* password = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* dbname = ((const char*)  tolua_tostring(tolua_S,4,0));
  unsigned int port = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  {
   int tolua_ret = (int)  connect_mysql(host,user,password,dbname,port);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connect_mysql'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: query */
#ifndef TOLUA_DISABLE_tolua_interface_mysql_query00
static int tolua_interface_mysql_query00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sql = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   int tolua_ret = (int)  query(sql);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'query'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: connect_redis */
#ifndef TOLUA_DISABLE_tolua_interface_redis_connect_redis00
static int tolua_interface_redis_connect_redis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* host = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned int port = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned short second = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  connect_redis(host,port,second);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connect_redis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: get_redis_value */
#ifndef TOLUA_DISABLE_tolua_interface_redis_get_redis_value00
static int tolua_interface_redis_get_redis_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* key = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   int tolua_ret = (int)  get_redis_value(key);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_redis_value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: set_redis_value */
#ifndef TOLUA_DISABLE_tolua_interface_redis_set_redis_value00
static int tolua_interface_redis_set_redis_value00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* key = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   int tolua_ret = (int)  set_redis_value(key,value);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_redis_value'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: set_redis_expire */
#ifndef TOLUA_DISABLE_tolua_interface_redis_set_redis_expire00
static int tolua_interface_redis_set_redis_expire00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* key = ((const char*)  tolua_tostring(tolua_S,1,0));
  int expire = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  set_redis_expire(key,expire);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_redis_expire'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Enqueue */
#ifndef TOLUA_DISABLE_tolua_interface_redis_Enqueue00
static int tolua_interface_redis_Enqueue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* queue = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   int tolua_ret = (int)  Enqueue(queue,value);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enqueue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Dequeue */
#ifndef TOLUA_DISABLE_tolua_interface_redis_Dequeue00
static int tolua_interface_redis_Dequeue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* queue = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   int tolua_ret = (int)  Dequeue(queue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dequeue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: IsActived */
#ifndef TOLUA_DISABLE_tolua_interface_redis_IsActived00
static int tolua_interface_redis_IsActived00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  IsActived();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActived'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: S_IsMember */
#ifndef TOLUA_DISABLE_tolua_interface_redis_S_IsMember00
static int tolua_interface_redis_S_IsMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* key = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   int tolua_ret = (int)  S_IsMember(key,value);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'S_IsMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: S_IsMember */
#ifndef TOLUA_DISABLE_tolua_interface_redis_S_IsMember01
static int tolua_interface_redis_S_IsMember01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* key = ((const char*)  tolua_tostring(tolua_S,1,0));
  const int value = ((const int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  S_IsMember(key,value);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_interface_redis_S_IsMember00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: NewUUID */
#ifndef TOLUA_DISABLE_tolua_interface_uuid_NewUUID00
static int tolua_interface_uuid_NewUUID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   NewUUID();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewUUID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_interface_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_module(tolua_S,"packet",0);
  tolua_beginmodule(tolua_S,"packet");
   tolua_function(tolua_S,"write_begin",tolua_interface_packet_write_begin00);
   tolua_function(tolua_S,"write_end",tolua_interface_packet_write_end00);
   tolua_function(tolua_S,"write_byte",tolua_interface_packet_write_byte00);
   tolua_function(tolua_S,"write_int",tolua_interface_packet_write_int00);
   tolua_function(tolua_S,"write_short",tolua_interface_packet_write_short00);
   tolua_function(tolua_S,"write_uint",tolua_interface_packet_write_uint00);
   tolua_function(tolua_S,"write_string",tolua_interface_packet_write_string00);
   tolua_function(tolua_S,"write_binary",tolua_interface_packet_write_binary00);
   tolua_function(tolua_S,"send_raw_packet",tolua_interface_packet_send_raw_packet00);
   tolua_function(tolua_S,"send_packet",tolua_interface_packet_send_packet00);
   tolua_function(tolua_S,"send_buffer",tolua_interface_packet_send_buffer00);
   tolua_function(tolua_S,"transfer",tolua_interface_packet_transfer00);
   tolua_function(tolua_S,"transfer_raw",tolua_interface_packet_transfer_raw00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"log",0);
  tolua_beginmodule(tolua_S,"log");
   tolua_function(tolua_S,"error",tolua_interface_log_error00);
   tolua_function(tolua_S,"info",tolua_interface_log_info00);
   tolua_function(tolua_S,"debug",tolua_interface_log_debug00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"timer",0);
  tolua_beginmodule(tolua_S,"timer");
   tolua_function(tolua_S,"create_timer",tolua_interface_timer_create_timer00);
   tolua_function(tolua_S,"start_timer",tolua_interface_timer_start_timer00);
   tolua_function(tolua_S,"reset_timer",tolua_interface_timer_reset_timer00);
   tolua_function(tolua_S,"stop_timer",tolua_interface_timer_stop_timer00);
   tolua_function(tolua_S,"clear_timer",tolua_interface_timer_clear_timer00);
   tolua_function(tolua_S,"remain_timer",tolua_interface_timer_remain_timer00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"server",0);
  tolua_beginmodule(tolua_S,"server");
   tolua_function(tolua_S,"create_listener",tolua_interface_server_create_listener00);
   tolua_function(tolua_S,"close_socket",tolua_interface_server_close_socket00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"client",0);
  tolua_beginmodule(tolua_S,"client");
   tolua_function(tolua_S,"connect_server",tolua_interface_client_connect_server00);
   tolua_function(tolua_S,"connect_server",tolua_interface_client_connect_server01);
   tolua_function(tolua_S,"close_socket",tolua_interface_client_close_socket00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"mysql",0);
  tolua_beginmodule(tolua_S,"mysql");
   tolua_function(tolua_S,"connect_mysql",tolua_interface_mysql_connect_mysql00);
   tolua_function(tolua_S,"query",tolua_interface_mysql_query00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"redis",0);
  tolua_beginmodule(tolua_S,"redis");
   tolua_function(tolua_S,"connect_redis",tolua_interface_redis_connect_redis00);
   tolua_function(tolua_S,"get_redis_value",tolua_interface_redis_get_redis_value00);
   tolua_function(tolua_S,"set_redis_value",tolua_interface_redis_set_redis_value00);
   tolua_function(tolua_S,"set_redis_expire",tolua_interface_redis_set_redis_expire00);
   tolua_function(tolua_S,"Enqueue",tolua_interface_redis_Enqueue00);
   tolua_function(tolua_S,"Dequeue",tolua_interface_redis_Dequeue00);
   tolua_function(tolua_S,"IsActived",tolua_interface_redis_IsActived00);
   tolua_function(tolua_S,"S_IsMember",tolua_interface_redis_S_IsMember00);
   tolua_function(tolua_S,"S_IsMember",tolua_interface_redis_S_IsMember01);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"uuid",0);
  tolua_beginmodule(tolua_S,"uuid");
   tolua_function(tolua_S,"NewUUID",tolua_interface_uuid_NewUUID00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_interface (lua_State* tolua_S) {
 return tolua_interface_open(tolua_S);
};
#endif

